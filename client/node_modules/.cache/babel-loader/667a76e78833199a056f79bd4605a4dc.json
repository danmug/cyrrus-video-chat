{"ast":null,"code":"var _jsxFileName = \"/Users/danmg/Documents/Cyrrus-Labs/Cyrrus-video-chat/client/src/components/video.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport \"./video.css\";\nimport { SocketContext } from '../Context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Video = () => {\n  _s();\n\n  const {\n    name,\n    callAccepted,\n    myVideo,\n    userVideo,\n    callEnded,\n    stream,\n    call\n  } = useContext(SocketContext);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"video__wrapper\",\n    children: [callAccepted && !callEnded && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"video__stream\",\n        children: [/*#__PURE__*/_jsxDEV(\"video\", {\n          playsInline: true,\n          ref: userVideo,\n          autoPlay: true,\n          className: \"video__container\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"overlay__wrapper\",\n          children: /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: call.name || 'Name'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 21\n      }, this)\n    }, void 0, false), stream && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"video__stream\",\n        children: [/*#__PURE__*/_jsxDEV(\"video\", {\n          playsInline: true,\n          muted: true,\n          ref: myVideo,\n          autoPlay: true,\n          className: \"video__container\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"overlay__wrapper\",\n          children: /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: name || 'Name'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 21\n      }, this)\n    }, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Video, \"+3j5f8vYYYHi/txeiOwP4jwFvZc=\");\n\n_c = Video;\nexport default Video;\n\nvar _c;\n\n$RefreshReg$(_c, \"Video\");","map":{"version":3,"sources":["/Users/danmg/Documents/Cyrrus-Labs/Cyrrus-video-chat/client/src/components/video.js"],"names":["React","useContext","SocketContext","Video","name","callAccepted","myVideo","userVideo","callEnded","stream","call"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAO,aAAP;AACA,SAASC,aAAT,QAA8B,YAA9B;;;;AAGA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAChB,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,YAAR;AAAsBC,IAAAA,OAAtB;AAA+BC,IAAAA,SAA/B;AAA0CC,IAAAA,SAA1C;AAAqDC,IAAAA,MAArD;AAA6DC,IAAAA;AAA7D,MAAsET,UAAU,CAACC,aAAD,CAAtF;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,eAEKG,YAAY,IAAI,CAACG,SAAjB,iBACG;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,gCACI;AAAO,UAAA,WAAW,MAAlB;AAAmB,UAAA,GAAG,EAAED,SAAxB;AAAmC,UAAA,QAAQ,MAA3C;AAA4C,UAAA,SAAS,EAAC;AAAtD;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAK,UAAA,SAAS,EAAC,kBAAf;AAAA,iCACI;AAAA,sBAAKG,IAAI,CAACN,IAAL,IAAa;AAAlB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,qBAHR,EAcKK,MAAM,iBACH;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,gCAEI;AAAO,UAAA,WAAW,MAAlB;AAAmB,UAAA,KAAK,MAAxB;AAAyB,UAAA,GAAG,EAAEH,OAA9B;AAAuC,UAAA,QAAQ,MAA/C;AAAgD,UAAA,SAAS,EAAC;AAA1D;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAII;AAAK,UAAA,SAAS,EAAC,kBAAf;AAAA,iCACI;AAAA,sBAAKF,IAAI,IAAI;AAAb;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,qBAfR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA+CH,CAlDD;;GAAMD,K;;KAAAA,K;AAoDN,eAAeA,KAAf","sourcesContent":["import React, { useContext } from 'react';\nimport \"./video.css\";\nimport { SocketContext } from '../Context';\n\n\nconst Video = () => {\n    const { name, callAccepted, myVideo, userVideo, callEnded, stream, call } = useContext(SocketContext);\n\n    return (\n        <div className=\"video__wrapper\" >\n\n            {callAccepted && !callEnded && (\n                <>\n                    <div className=\"video__stream\" >\n                        <video playsInline ref={userVideo} autoPlay className=\"video__container\" />\n                        <div className=\"overlay__wrapper\">\n                            <h4>{call.name || 'Name'}</h4>\n\n                        </div>\n                    </div>\n                </>\n            )}\n\n            {stream && (\n                <>\n                    <div className=\"video__stream\" >\n                        {/*<h4>{name || 'Name'}</h4>*/}\n                        <video playsInline muted ref={myVideo} autoPlay className=\"video__container\" />\n\n                        <div className=\"overlay__wrapper\">\n                            <h4>{name || 'Name'}</h4>\n\n                            {/*<div className=\"overlay\">*/}\n                            {/*    <h4>{name || 'Name'}</h4>*/}\n                            {/*</div>*/}\n                        </div>\n\n                    </div>\n\n                </>\n\n            )}\n\n            {/*{callAccepted && !callEnded && (*/}\n            {/*    <div className=\"video__stream\" >*/}\n            {/*        <video playsInline ref={userVideo} autoPlay className=\"video__container\" />*/}\n            {/*        <div className=\"overlay__wrapper\">*/}\n            {/*            <h4>{call.name || 'Name'}</h4>*/}\n\n            {/*        </div>*/}\n            {/*    </div>*/}\n            {/*)}*/}\n\n        </div>\n    );\n};\n\nexport default Video;\n"]},"metadata":{},"sourceType":"module"}