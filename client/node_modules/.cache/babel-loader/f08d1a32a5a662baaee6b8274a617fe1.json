{"ast":null,"code":"var _jsxFileName = \"/Users/danmg/Documents/Cyrrus-Labs/Cyrrus-video-chat/client/src/components/Sidebar_Small.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport \"./Sidebar_Small.css\";\nimport { Assignment, Phone, PhoneDisabled } from \"@material-ui/icons\";\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\nimport { makeStyles, TextField, withStyles } from \"@material-ui/core\";\nimport { SocketContext } from \"../Context\";\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport { useSpring, animated } from 'react-spring/web.cjs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Fade = /*#__PURE__*/React.forwardRef(_c = _s(function Fade(props, ref) {\n  _s();\n\n  const {\n    in: open,\n    children,\n    onEnter,\n    onExited,\n    ...other\n  } = props;\n  const style = useSpring({\n    from: {\n      opacity: 0\n    },\n    to: {\n      opacity: open ? 1 : 0\n    },\n    onStart: () => {\n      if (open && onEnter) {\n        onEnter();\n      }\n    },\n    onRest: () => {\n      if (!open && onExited) {\n        onExited();\n      }\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(animated.div, {\n    ref: ref,\n    style: style,\n    ...other,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n}, \"0RIVm/KF68BFaH02eyzhytvjKbY=\", false, function () {\n  return [useSpring];\n}));\n_c2 = Fade;\n\nconst Sidebar_Small = () => {\n  _s2();\n\n  const {\n    me,\n    callAccepted,\n    name,\n    setName,\n    callEnded,\n    leaveCall,\n    callUser\n  } = useContext(SocketContext);\n  const classes = useStyles();\n  const [idToCall, setIdToCall] = useState('');\n  const [open, setOpen] = React.useState(false);\n  const [infos, setInfos] = React.useState(false);\n  const [call, setCall] = React.useState(false);\n\n  const handleOpenInfos = () => {\n    setOpen(true);\n    setInfos(true);\n  };\n\n  const handleOpenCall = () => {\n    setOpen(true);\n    setCall(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    setCall(false);\n    setInfos(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"reload__wrapper__small\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"reload__small\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Please, reload the page!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar__small__wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sidebar__small\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: handleOpenInfos,\n          className: \"button__small__icon\",\n          children: [/*#__PURE__*/_jsxDEV(AccountCircleIcon, {\n            style: {\n              color: 'rgba(233,210,206,1)'\n            },\n            fontSize: \"large\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Infos\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: callAccepted && !callEnded ? leaveCall : handleOpenCall,\n          className: \"button__small__icon\",\n          children: [/*#__PURE__*/_jsxDEV(Phone, {\n            style: {\n              color: 'rgba(233,210,206,1)'\n            },\n            fontSize: \"large\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 24\n          }, this), callAccepted && !callEnded ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"HangUp\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 56\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Call\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 72\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        \"aria-labelledby\": \"spring-modal-title\",\n        \"aria-describedby\": \"spring-modal-description\",\n        className: classes.modal,\n        open: open,\n        onClose: handleClose,\n        closeAfterTransition: true,\n        BackdropComponent: Backdrop,\n        BackdropProps: {\n          timeout: 500\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"removeOutline\",\n          children: /*#__PURE__*/_jsxDEV(Fade, {\n            in: open,\n            children: [infos && !call && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.paper,\n              children: [/*#__PURE__*/_jsxDEV(CssTextValidator, {\n                variant: \"standard\",\n                className: classes.margin,\n                fullWidth: true,\n                label: \"Enter your name\",\n                onChange: e => setName(e.target.value),\n                name: \"email\",\n                value: name,\n                autoComplete: \"off\",\n                InputProps: {\n                  className: classes.label\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(CopyToClipboard, {\n                text: me,\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  className: \"btn\",\n                  onClick: handleClose,\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"btn__small__text\",\n                    children: \"COPY YOUR ID\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 127,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"btn__icon\",\n                    children: /*#__PURE__*/_jsxDEV(Assignment, {\n                      fontSize: \"large\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 129,\n                      columnNumber: 57\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 128,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 126,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 37\n            }, this), call & !infos && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.paper,\n              children: [/*#__PURE__*/_jsxDEV(CssTextValidator, {\n                variant: \"standard\",\n                className: classes.margin,\n                fullWidth: true,\n                label: \"ID to call\",\n                onChange: e => setIdToCall(e.target.value),\n                name: \"email\",\n                value: idToCall,\n                autoComplete: \"off\",\n                InputProps: {\n                  className: classes.label\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 41\n              }, this), callAccepted && !callEnded ? /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"btn\",\n                onClick: leaveCall,\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"button__icon\",\n                  children: /*#__PURE__*/_jsxDEV(PhoneDisabled, {\n                    fontSize: \"large\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 161,\n                    columnNumber: 53\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 160,\n                  columnNumber: 53\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"button__text\",\n                  children: \"HANG UP\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 163,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 45\n              }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                onClick: () => callUser(idToCall),\n                className: \"btn\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  onClick: handleClose,\n                  className: \"button__icon\",\n                  children: /*#__PURE__*/_jsxDEV(Phone, {\n                    fontSize: \"large\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 172,\n                    columnNumber: 65\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 169,\n                  columnNumber: 57\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  onClick: handleClose,\n                  className: \"button__text\",\n                  children: \"CALL\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 174,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s2(Sidebar_Small, \"8IRbc/Y0Vyj/vLLTg/86/mw8IVc=\", false, function () {\n  return [useStyles];\n});\n\n_c3 = Sidebar_Small;\nconst CssTextValidator = withStyles({\n  root: {\n    '& label': {\n      color: '#0E0B0F',\n      fontFamily: 'Montserrat',\n      fontSize: '17px',\n      fontWeight: 'bold'\n    },\n    '& label.Mui-focused': {\n      color: '#0E0B0F'\n    },\n    '& .MuiInput-underline::before': {\n      borderColor: '#0E0B0F',\n      borderWidth: 2\n    },\n    '& .MuiInput-underline::after': {\n      // borderColor: '#c1291f',\n      borderColor: '#0E0B0F',\n      borderWidth: 2\n    }\n  }\n})(TextField);\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    backgroundColor: 'rgba(252,240,237,0.8)',\n    border: 'none',\n    borderRadius: '10px',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(4, 4, 3)\n  },\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    \"&:focus\": {\n      outline: \"none\"\n    }\n  },\n  margin: {\n    margin: theme.spacing(0)\n  },\n  label: {\n    fontFamily: 'Montserrat',\n    fontSize: '17px',\n    fontWeight: 'bold',\n    color: '#0E0B0F'\n  },\n  submit: {\n    background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\n    margin: theme.spacing(1),\n    color: '#fff',\n    fontFamily: 'Marcellus',\n    fontSize: '15px',\n    fontWeight: '300' // width: '170px'\n\n  }\n}));\nexport default Sidebar_Small;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Fade$React.forwardRef\");\n$RefreshReg$(_c2, \"Fade\");\n$RefreshReg$(_c3, \"Sidebar_Small\");","map":{"version":3,"sources":["/Users/danmg/Documents/Cyrrus-Labs/Cyrrus-video-chat/client/src/components/Sidebar_Small.js"],"names":["React","useState","useEffect","useContext","Assignment","Phone","PhoneDisabled","AccountCircleIcon","CopyToClipboard","makeStyles","TextField","withStyles","SocketContext","Modal","Backdrop","useSpring","animated","Fade","forwardRef","props","ref","in","open","children","onEnter","onExited","other","style","from","opacity","to","onStart","onRest","Sidebar_Small","me","callAccepted","name","setName","callEnded","leaveCall","callUser","classes","useStyles","idToCall","setIdToCall","setOpen","infos","setInfos","call","setCall","handleOpenInfos","handleOpenCall","handleClose","color","modal","timeout","paper","margin","e","target","value","className","label","CssTextValidator","root","fontFamily","fontSize","fontWeight","borderColor","borderWidth","theme","backgroundColor","border","borderRadius","boxShadow","shadows","padding","spacing","display","alignItems","justifyContent","outline","submit","background"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useContext} from 'react';\nimport \"./Sidebar_Small.css\";\nimport {Assignment, Phone, PhoneDisabled} from \"@material-ui/icons\";\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport {CopyToClipboard} from \"react-copy-to-clipboard\";\nimport {makeStyles, TextField, withStyles} from \"@material-ui/core\";\nimport {SocketContext} from \"../Context\";\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport { useSpring, animated } from 'react-spring/web.cjs';\n\nconst Fade = React.forwardRef(function Fade(props, ref) {\n    const { in: open, children, onEnter, onExited, ...other } = props;\n    const style = useSpring({\n        from: { opacity: 0 },\n        to: { opacity: open ? 1 : 0 },\n        onStart: () => {\n            if (open && onEnter) {\n                onEnter();\n            }\n        },\n        onRest: () => {\n            if (!open && onExited) {\n                onExited();\n            }\n        },\n    });\n\n    return (\n        <animated.div ref={ref} style={style} {...other}>\n            {children}\n        </animated.div>\n    );\n});\n\nconst Sidebar_Small = () => {\n    const { me, callAccepted, name, setName, callEnded, leaveCall, callUser } = useContext(SocketContext);\n    const classes = useStyles();\n\n    const [idToCall, setIdToCall] = useState('');\n    const [open, setOpen] = React.useState(false);\n    const [infos, setInfos] = React.useState(false);\n    const [call, setCall] = React.useState(false);\n\n    const handleOpenInfos = () => {\n        setOpen(true);\n        setInfos(true)\n    };\n\n    const handleOpenCall = () => {\n        setOpen(true);\n        setCall(true)\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n        setCall(false);\n        setInfos(false);\n    };\n\n    return (\n        <>\n            <div className=\"reload__wrapper__small\">\n                <div className=\"reload__small\">\n                    <p>Please, reload the page!</p>\n                </div>\n            </div>\n            <div className=\"sidebar__small__wrapper\" >\n                <div className=\"sidebar__small\" >\n                    {/*<p>Hey Guys, Jesus is Lord</p>*/}\n\n                    <span onClick={handleOpenInfos} className=\"button__small__icon\">\n                        <AccountCircleIcon\n                            style={{ color: 'rgba(233,210,206,1)' }}\n                            fontSize=\"large\" />\n                        <p>Infos</p>\n                    </span>\n\n                    <span onClick={ callAccepted && !callEnded ? leaveCall : handleOpenCall } className=\"button__small__icon\">\n                       <Phone\n                           style={{ color: 'rgba(233,210,206,1)' }}\n                           fontSize=\"large\" />\n                        { callAccepted && !callEnded ? <p>HangUp</p> : <p>Call</p> }\n                    </span>\n                </div>\n\n                <Modal\n                    aria-labelledby=\"spring-modal-title\"\n                    aria-describedby=\"spring-modal-description\"\n                    className={classes.modal}\n                    open={open}\n                    onClose={handleClose}\n                    closeAfterTransition\n                    BackdropComponent={Backdrop}\n                    BackdropProps={{\n                        timeout: 500,\n                    }}\n                >\n\n                    <div className=\"removeOutline\" >\n                        <Fade in={open}>\n\n                            {\n                                infos && !call &&\n                                (\n                                    <div className={classes.paper}>\n                                        {/*<h2 id=\"spring-modal-title\">Spring modal</h2>*/}\n                                        {/*<p id=\"spring-modal-description\">react-spring animates me.</p>*/}\n\n                                        <CssTextValidator\n                                            variant=\"standard\"\n                                            className={classes.margin}\n                                            fullWidth\n                                            label=\"Enter your name\"\n                                            onChange={(e) => setName(e.target.value)}\n                                            name=\"email\"\n                                            value={name}\n                                            autoComplete='off'\n                                            InputProps={{\n                                                className: classes.label,\n                                            }}\n                                        />\n                                        <br/>\n\n                                        <CopyToClipboard text={me} >\n                                            <button type=\"button\" className=\"btn\" onClick={handleClose}  >\n                                                <span className=\"btn__small__text\">COPY YOUR ID</span>\n                                                <span className=\"btn__icon\">\n                                                        <Assignment fontSize=\"large\" />\n                                                    </span>\n                                            </button>\n                                        </CopyToClipboard>\n\n                                    </div>\n                                )\n                            }\n\n                            {\n                                call & !infos &&\n                                (\n                                    <div className={classes.paper} >\n                                        <CssTextValidator\n                                            variant=\"standard\"\n                                            className={classes.margin}\n                                            fullWidth\n                                            label=\"ID to call\"\n                                            onChange={(e) => setIdToCall(e.target.value)}\n                                            name=\"email\"\n                                            value={idToCall}\n                                            autoComplete='off'\n                                            InputProps={{\n                                                className: classes.label,\n                                            }}\n                                        />\n\n                                        <br/>\n\n                                        { callAccepted && !callEnded ? (\n                                            <button type=\"button\" className=\"btn\" onClick={leaveCall} >\n                                                    <span className=\"button__icon\">\n                                                    <PhoneDisabled fontSize=\"large\" />\n                                                    </span>\n                                                <span className=\"button__text\">HANG UP</span>\n                                            </button>\n                                        ) : (\n                                            <button type=\"button\"\n                                                    onClick={() => callUser(idToCall)}\n                                                    className=\"btn\">\n                                                        <span\n                                                            onClick={ handleClose }\n                                                            className=\"button__icon\">\n                                                                <Phone fontSize=\"large\" />\n                                                        </span>\n                                                <span onClick={ handleClose } className=\"button__text\">CALL</span>\n                                            </button>\n                                        )}\n                                    </div>\n                                )\n                            }\n\n\n                        </Fade>\n                    </div>\n\n\n                </Modal>\n\n\n            </div>\n        </>\n    );\n};\n\nconst CssTextValidator = withStyles({\n    root: {\n        '& label': {\n            color: '#0E0B0F',\n            fontFamily: 'Montserrat',\n            fontSize: '17px',\n            fontWeight: 'bold',\n        },\n\n        '& label.Mui-focused': {\n            color: '#0E0B0F',\n        },\n        '& .MuiInput-underline::before': {\n            borderColor: '#0E0B0F',\n            borderWidth: 2,\n        },\n        '& .MuiInput-underline::after': {\n            // borderColor: '#c1291f',\n            borderColor: '#0E0B0F',\n            borderWidth: 2,\n        }\n    },\n})(TextField);\n\nconst useStyles = makeStyles((theme) => ({\n\n    paper: {\n        backgroundColor: 'rgba(252,240,237,0.8)',\n        border: 'none',\n        borderRadius: '10px',\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing(4, 4, 3),\n    },\n\n    modal: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n\n        \"&:focus\":{\n            outline: \"none\"\n        }\n    },\n    margin: {\n        margin: theme.spacing(0),\n    },\n    label : {\n        fontFamily: 'Montserrat',\n        fontSize: '17px',\n        fontWeight: 'bold',\n        color: '#0E0B0F',\n\n    },\n    submit: {\n        background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\n        margin: theme.spacing(1),\n        color: '#fff',\n        fontFamily: 'Marcellus',\n        fontSize: '15px',\n        fontWeight: '300',\n        // width: '170px'\n\n    }\n\n\n}));\n\nexport default Sidebar_Small;\n"]},"metadata":{},"sourceType":"module"}