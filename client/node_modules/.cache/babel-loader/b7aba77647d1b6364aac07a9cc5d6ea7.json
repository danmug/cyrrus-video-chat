{"ast":null,"code":"var _jsxFileName = \"/Users/danmg/Documents/Cyrrus-Labs/Cyrrus-video-chat/client/src/components/Nav.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useContext, useEffect } from 'react';\nimport \"./Navbar.css\";\nimport \"./Sidebar.css\";\nimport { Assignment, Phone } from \"@material-ui/icons\";\nimport { SocketContext } from '../Context';\nimport { withStyles, makeStyles, TextField, Button } from \"@material-ui/core\";\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport { useSpring, animated } from 'react-spring/web.cjs';\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Fade = /*#__PURE__*/React.forwardRef(_c = _s(function Fade(props, ref) {\n  _s();\n\n  const {\n    in: open,\n    children,\n    onEnter,\n    onExited,\n    ...other\n  } = props;\n  const style = useSpring({\n    from: {\n      opacity: 0\n    },\n    to: {\n      opacity: open ? 1 : 0\n    },\n    onStart: () => {\n      if (open && onEnter) {\n        onEnter();\n      }\n    },\n    onRest: () => {\n      if (!open && onExited) {\n        onExited();\n      }\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(animated.div, {\n    ref: ref,\n    style: style,\n    ...other,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}, \"0RIVm/KF68BFaH02eyzhytvjKbY=\", false, function () {\n  return [useSpring];\n}));\n_c2 = Fade;\n\nconst Nav = () => {\n  _s2();\n\n  const classes = useStyles();\n  const {\n    answerCall,\n    call,\n    callAccepted,\n    me,\n    name,\n    setName\n  } = useContext(SocketContext);\n  const [notification, setNotification] = useState(false);\n  const [openModal, setOpenModal] = useState(false);\n\n  const handleModal = () => {\n    setOpenModal(true);\n  };\n\n  const handleClose = () => {\n    setOpenModal(false);\n  };\n\n  useEffect(() => {\n    const timer = setTimeout(() => handleModal(), 2500);\n    return () => clearTimeout(timer);\n  }, []); // if ( call.isReceivingCall && !callAccepted  ) {\n  //     setNotification(true)\n  //\n  //     console.log('New Notification')\n  // }\n  // if ( callAccepted ) {\n  //     setNotification(false)\n  // }\n  //\n  // const handleNotification = () => {\n  //     setNotification(!notification)\n  // };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"nav__wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: call.isReceivingCall && !callAccepted ? 'nav active' : 'nav ',\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"CYRRUS VIDEO CHAT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notification__wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: call.isReceivingCall && !callAccepted ? 'notification active' : 'notification',\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: answerCall,\n          className: \"call\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"call-phone\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"call-phone__circle\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"call-phone__circle-fill\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"call-phone__circle-img\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"icon-phone\",\n                children: /*#__PURE__*/_jsxDEV(Phone, {\n                  fontSize: \"large\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 87,\n                  columnNumber: 38\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [call.name, \" calling you\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      \"aria-labelledby\": \"spring-modal-title\",\n      \"aria-describedby\": \"spring-modal-description\",\n      className: classes.modal,\n      open: openModal,\n      onClose: handleClose,\n      closeAfterTransition: true,\n      BackdropComponent: Backdrop,\n      BackdropProps: {\n        timeout: 500\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"removeOutline\",\n        children: /*#__PURE__*/_jsxDEV(Fade, {\n          in: openModal,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.paper,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"info__modal\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"info__modal_title\",\n                children: /*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: \" Account Info\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 117,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(CssTextValidator, {\n                variant: \"standard\",\n                className: classes.margin,\n                fullWidth: true,\n                label: \"Enter your name\",\n                onChange: e => setName(e.target.value),\n                name: \"name\",\n                value: name,\n                autoComplete: \"off\",\n                InputProps: {\n                  className: classes.label\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(CopyToClipboard, {\n                text: me,\n                onClick: handleClose,\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  className: \"button\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"button__text\",\n                    children: \"COPY YOUR ID\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 137,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"button__icon\",\n                    children: /*#__PURE__*/_jsxDEV(Assignment, {\n                      fontSize: \"large\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 139,\n                      columnNumber: 44\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 138,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 136,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"info__modal_description\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Copy the ID and send it to the\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 145,\n                    columnNumber: 70\n                  }, this), \" person who will call you.\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 145,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Or ask the person you want to \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 146,\n                    columnNumber: 70\n                  }, this), \"call his ID and make the call.\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 146,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n};\n\n_s2(Nav, \"GD2nf2VEv99csbId14ghqUwX1/o=\", false, function () {\n  return [useStyles];\n});\n\n_c3 = Nav;\nconst CssTextValidator = withStyles({\n  root: {\n    '& label': {\n      color: '#0E0B0F',\n      fontFamily: 'Montserrat',\n      fontSize: '17px',\n      fontWeight: 'bold'\n    },\n    '& label.Mui-focused': {\n      color: '#0E0B0F'\n    },\n    '& .MuiInput-underline::before': {\n      borderColor: '#0E0B0F',\n      borderWidth: 2\n    },\n    '& .MuiInput-underline::after': {\n      // borderColor: '#c1291f',\n      borderColor: '#0E0B0F',\n      borderWidth: 2\n    }\n  }\n})(TextField);\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    backgroundColor: 'rgba(252,235,232,0.8)',\n    border: 'none',\n    borderRadius: '10px',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(4, 4, 3)\n  },\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    \"&:focus\": {\n      outline: \"none\"\n    }\n  },\n  margin: {\n    margin: theme.spacing(0)\n  },\n  label: {\n    fontFamily: 'Montserrat',\n    fontSize: '17px',\n    fontWeight: 'bold',\n    color: '#0E0B0F'\n  }\n}));\nexport default Nav;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Fade$React.forwardRef\");\n$RefreshReg$(_c2, \"Fade\");\n$RefreshReg$(_c3, \"Nav\");","map":{"version":3,"sources":["/Users/danmg/Documents/Cyrrus-Labs/Cyrrus-video-chat/client/src/components/Nav.js"],"names":["React","useState","useContext","useEffect","Assignment","Phone","SocketContext","withStyles","makeStyles","TextField","Button","Modal","Backdrop","useSpring","animated","CopyToClipboard","Fade","forwardRef","props","ref","in","open","children","onEnter","onExited","other","style","from","opacity","to","onStart","onRest","Nav","classes","useStyles","answerCall","call","callAccepted","me","name","setName","notification","setNotification","openModal","setOpenModal","handleModal","handleClose","timer","setTimeout","clearTimeout","isReceivingCall","modal","timeout","paper","margin","e","target","value","className","label","CssTextValidator","root","color","fontFamily","fontSize","fontWeight","borderColor","borderWidth","theme","backgroundColor","border","borderRadius","boxShadow","shadows","padding","spacing","display","alignItems","justifyContent","outline"],"mappings":"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","sourcesContent":["import React, {useState, useContext, useEffect} from 'react';\nimport \"./Navbar.css\";\nimport \"./Sidebar.css\";\nimport {Assignment, Phone} from \"@material-ui/icons\";\nimport { SocketContext } from '../Context';\nimport {withStyles, makeStyles, TextField, Button} from \"@material-ui/core\";\n\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport { useSpring, animated } from 'react-spring/web.cjs';\nimport {CopyToClipboard} from \"react-copy-to-clipboard\";\n\nconst Fade = React.forwardRef(function Fade(props, ref) {\n    const { in: open, children, onEnter, onExited, ...other } = props;\n    const style = useSpring({\n        from: { opacity: 0 },\n        to: { opacity: open ? 1 : 0 },\n        onStart: () => {\n            if (open && onEnter) {\n                onEnter();\n            }\n        },\n        onRest: () => {\n            if (!open && onExited) {\n                onExited();\n            }\n        },\n    });\n\n    return (\n        <animated.div ref={ref} style={style} {...other}>\n            {children}\n        </animated.div>\n    );\n});\n\nconst Nav = () => {\n    const classes = useStyles();\n    const { answerCall, call, callAccepted, me, name, setName } = useContext(SocketContext);\n    const [notification, setNotification] = useState(false);\n    const [openModal, setOpenModal] = useState(false);\n\n    const handleModal = () => {\n        setOpenModal(true);\n    };\n\n    const handleClose = () => {\n        setOpenModal(false);\n    };\n\n    useEffect(() => {\n        const timer = setTimeout(() => handleModal(), 2500);\n        return () => clearTimeout(timer);\n    }, []);\n\n    // if ( call.isReceivingCall && !callAccepted  ) {\n    //     setNotification(true)\n    //\n    //     console.log('New Notification')\n    // }\n\n    // if ( callAccepted ) {\n    //     setNotification(false)\n    // }\n    //\n    // const handleNotification = () => {\n    //     setNotification(!notification)\n    // };\n\n    return (\n        <div className=\"nav__wrapper\" >\n\n            <div\n                className={ call.isReceivingCall && !callAccepted ? 'nav active' : 'nav ' } >\n                <h3>CYRRUS VIDEO CHAT</h3>\n            </div>\n            <div\n                className=\"notification__wrapper\">\n                <div className={ call.isReceivingCall && !callAccepted ? 'notification active' : 'notification' } >\n\n                    <div onClick={ answerCall } className=\"call\" >\n                        <div className=\"call-phone\">\n                            <div className=\"call-phone__circle\"></div>\n                            <div className=\"call-phone__circle-fill\"></div>\n                            <div className=\"call-phone__circle-img\">\n                                <span className=\"icon-phone\" >\n                                     <Phone fontSize=\"large\" />\n                                </span>\n\n                            </div>\n                        </div>\n                    </div>\n\n                    <h3>{call.name} calling you</h3>\n                </div>\n            </div>\n\n            <Modal\n                aria-labelledby=\"spring-modal-title\"\n                aria-describedby=\"spring-modal-description\"\n                className={classes.modal}\n                open={openModal}\n                onClose={handleClose}\n                closeAfterTransition\n                BackdropComponent={Backdrop}\n                BackdropProps={{\n                    timeout: 500,\n                }}\n            >\n\n                <div className=\"removeOutline\" >\n                    <Fade in={openModal}>\n                        <div className={classes.paper} >\n                            <div className=\"info__modal\" >\n\n                                <div className=\"info__modal_title\" >\n                                    <h4> Account Info</h4>\n                                </div>\n                                <br/>\n                                <CssTextValidator\n                                    variant=\"standard\"\n                                    className={classes.margin}\n                                    fullWidth\n                                    label=\"Enter your name\"\n                                    onChange={(e) => setName(e.target.value)}\n                                    name=\"name\"\n                                    value={name}\n                                    autoComplete='off'\n                                    InputProps={{\n                                        className: classes.label,\n                                    }}\n                                />\n                                <br/>\n\n                                <CopyToClipboard text={me} onClick={ handleClose } >\n                                    <button type=\"button\" className=\"button\" >\n                                        <span className=\"button__text\">COPY YOUR ID</span>\n                                        <span className=\"button__icon\">\n                                           <Assignment fontSize=\"large\" />\n                                        </span>\n                                    </button>\n                                </CopyToClipboard>\n                                <br/>\n                                <div className=\"info__modal_description\" >\n                                    <p>Copy the ID and send it to the<br/> person who will call you.</p>\n                                    <p>Or ask the person you want to <br/>call his ID and make the call.</p>\n                                </div>\n\n                            </div>\n\n                        </div>\n\n                    </Fade>\n                </div>\n            </Modal>\n\n        </div>\n    );\n};\n\nconst CssTextValidator = withStyles({\n    root: {\n        '& label': {\n            color: '#0E0B0F',\n            fontFamily: 'Montserrat',\n            fontSize: '17px',\n            fontWeight: 'bold',\n        },\n\n        '& label.Mui-focused': {\n            color: '#0E0B0F',\n        },\n        '& .MuiInput-underline::before': {\n            borderColor: '#0E0B0F',\n            borderWidth: 2,\n        },\n        '& .MuiInput-underline::after': {\n            // borderColor: '#c1291f',\n            borderColor: '#0E0B0F',\n            borderWidth: 2,\n        }\n    },\n})(TextField);\n\nconst useStyles = makeStyles((theme) => ({\n\n    paper: {\n        backgroundColor: 'rgba(252,235,232,0.8)',\n        border: 'none',\n        borderRadius: '10px',\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing(4, 4, 3),\n    },\n\n    modal: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n\n        \"&:focus\":{\n            outline: \"none\"\n        }\n    },\n    margin: {\n        margin: theme.spacing(0),\n    },\n    label : {\n        fontFamily: 'Montserrat',\n        fontSize: '17px',\n        fontWeight: 'bold',\n        color: '#0E0B0F',\n    }\n\n}));\n\nexport default Nav;\n"]},"metadata":{},"sourceType":"module"}