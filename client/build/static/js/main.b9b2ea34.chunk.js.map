{"version":3,"sources":["Context.js","components/Nav.js","components/Sidebar.js","components/video.js","components/Sidebar_Small.js","App.js","index.js"],"names":["SocketContext","createContext","socket","io","ContextProvider","children","useState","callAccepted","setCallAccepted","callEnded","setCallEnded","stream","setStream","name","setName","call","setCall","me","setMe","myVideo","useRef","userVideo","connectionRef","useEffect","navigator","mediaDevices","getUserMedia","video","audio","then","currentStream","current","srcObject","on","id","from","callerName","signal","isReceivingCall","Provider","value","callUser","peer","Peer","initiator","trickle","data","emit","userToCall","signalData","leaveCall","destroy","window","location","reload","answerCall","to","Nav","useContext","className","onClick","Phone","fontSize","CssTextValidator","withStyles","root","color","fontFamily","fontWeight","borderColor","borderWidth","TextField","useStyles","makeStyles","theme","margin","spacing","label","submit","background","Sidebar","idToCall","setIdToCall","sidebar","setSidebar","classes","handleSidebar","style","cursor","backgroundColor","left","marginLeft","variant","fullWidth","onChange","e","target","autoComplete","InputProps","text","type","Assignment","opacity","transition","right","PhoneDisabled","Video","playsInline","muted","ref","autoPlay","Fade","React","forwardRef","props","open","in","onEnter","onExited","other","useSpring","onStart","onRest","div","paper","palette","border","borderRadius","boxShadow","shadows","padding","modal","display","alignItems","justifyContent","outline","Sidebar_Small","setOpen","infos","setInfos","handleClose","Modal","aria-labelledby","aria-describedby","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","wrapper","flexDirection","width","App","some","toMatchItem","userAgent","match","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b9b2ea34.chunk.js","sourcesContent":["import React, { createContext, useState, useRef, useEffect } from 'react';\nimport { io } from 'socket.io-client';\nimport Peer from 'simple-peer';\n\nconst SocketContext = createContext();\n\n// const socket = io('http://localhost:5000');\nconst socket = io('https://cyrrus-video-chat.herokuapp.com/');\n\nconst ContextProvider = ({ children }) => {\n    const [callAccepted, setCallAccepted] = useState(false);\n    const [callEnded, setCallEnded] = useState(false);\n    const [stream, setStream] = useState();\n    const [name, setName] = useState('');\n    const [call, setCall] = useState({});\n    const [me, setMe] = useState('');\n\n    const myVideo = useRef();\n    const userVideo = useRef();\n    const connectionRef = useRef();\n\n    useEffect(() => {\n        navigator.mediaDevices.getUserMedia({ video: true, audio: true })\n            .then((currentStream) => {\n                setStream(currentStream);\n\n                myVideo.current.srcObject = currentStream;\n            });\n\n        socket.on('me', (id) => setMe(id));\n\n        socket.on('callUser', ({ from, name: callerName, signal }) => {\n            setCall({ isReceivingCall: true, from, name: callerName, signal });\n        });\n    }, []);\n\n    const answerCall = () => {\n        setCallAccepted(true);\n\n        const peer = new Peer({ initiator: false, trickle: false, stream });\n\n        peer.on('signal', (data) => {\n            socket.emit('answerCall', { signal: data, to: call.from });\n        });\n\n        peer.on('stream', (currentStream) => {\n            userVideo.current.srcObject = currentStream;\n        });\n\n        peer.signal(call.signal);\n\n        connectionRef.current = peer;\n\n    };\n\n    const callUser = (id) => {\n        // console.log(\"Calling...\")\n\n        const peer = new Peer({ initiator: true, trickle: false, stream });\n\n        peer.on('signal', (data) => {\n            socket.emit('callUser', { userToCall: id, signalData: data, from: me, name });\n        });\n\n        peer.on('stream', (currentStream) => {\n            userVideo.current.srcObject = currentStream;\n        });\n\n        socket.on('callAccepted', (signal) => {\n            setCallAccepted(true);\n\n            peer.signal(signal);\n        });\n\n        connectionRef.current = peer;\n    };\n\n    const leaveCall = () => {\n        setCallEnded(true);\n\n        connectionRef.current.destroy();\n\n        window.location.reload();\n    };\n\n    return (\n        <SocketContext.Provider value={{\n            call,\n            callAccepted,\n            myVideo,\n            userVideo,\n            stream,\n            name,\n            setName,\n            callEnded,\n            me,\n            callUser,\n            leaveCall,\n            answerCall,\n        }}\n        >\n            {children}\n        </SocketContext.Provider>\n    );\n};\n\nexport { ContextProvider, SocketContext };","import React, { useState, useContext } from 'react';\nimport \"./Navbar.css\";\nimport {Phone} from \"@material-ui/icons\";\nimport { SocketContext } from '../Context';\n\nconst Nav = () => {\n    const { answerCall, call, callAccepted } = useContext(SocketContext);\n    const [notification, setNotification] = useState(false);\n\n    // if ( call.isReceivingCall && !callAccepted  ) {\n    //     setNotification(true)\n    //\n    //     console.log('New Notification')\n    // }\n\n    // if ( callAccepted ) {\n    //     setNotification(false)\n    // }\n    //\n    // const handleNotification = () => {\n    //     setNotification(!notification)\n    // };\n\n    return (\n        <div className=\"nav__wrapper\" >\n\n            <div\n                className={ call.isReceivingCall && !callAccepted ? 'nav active' : 'nav ' } >\n                <h3>CYRRUS VIDEO CHAT</h3>\n            </div>\n            <div\n                className=\"notification__wrapper\">\n                <div className={ call.isReceivingCall && !callAccepted ? 'notification active' : 'notification' } >\n\n                    <div onClick={ answerCall } className=\"call\" >\n                        <div className=\"call-phone\">\n                            <div className=\"call-phone__circle\"></div>\n                            <div className=\"call-phone__circle-fill\"></div>\n                            <div className=\"call-phone__circle-img\">\n                                <span className=\"icon-phone\" >\n                                     <Phone fontSize=\"large\" />\n                                </span>\n\n                            </div>\n                        </div>\n                    </div>\n\n                    <h3>{call.name} calling you</h3>\n                </div>\n            </div>\n\n        </div>\n    );\n};\n\nexport default Nav;\n","import React, { useState, useContext } from 'react';\nimport \"./Sidebar.css\";\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\n\nimport {withStyles, makeStyles, TextField, Button} from \"@material-ui/core\";\nimport {Assignment, Phone, PhoneDisabled} from \"@material-ui/icons\";\n\nimport { SocketContext } from '../Context';\n\nconst Sidebar = () => {\n    const { me, callAccepted, name, setName, callEnded, leaveCall, callUser } = useContext(SocketContext);\n    const [idToCall, setIdToCall] = useState('');\n    const [sidebar, setSidebar] = useState(false);\n\n    const classes = useStyles();\n\n    const handleSidebar = () => {\n        setSidebar(!sidebar)\n    };\n\n    // console.log('My ID ===>', me)\n\n    return (\n        <div className=\"sidebar__wrapper\" >\n            <div className=\"sidebar\" >\n\n                <div className={ sidebar ? 'sidebar__content active' : 'sidebar__content' } >\n\n                    {\n                        sidebar ?\n                            <KeyboardArrowDownIcon onClick={ handleSidebar } style={{ fontSize: 60, cursor: 'pointer', color: '#0E0B0F' }} />\n                            :\n                            <KeyboardArrowUpIcon onClick={ handleSidebar } style={{ fontSize: 60, cursor: 'pointer', color: '#0E0B0F' }} />\n\n                    }\n\n                    <div className=\"sidebar__items\" >\n                        <div className=\"sidebar__item\" >\n                            <div className=\"icon__wrapper\">\n                                <div onClick={ handleSidebar } className=\"icon\">\n                                    <div className=\"icon__content\"\n                                         style={{ backgroundColor: '#e9d2ce' }} >\n                                        <div\n                                            className=\"info__button\"\n                                            style={{ left: '0px' }}\n                                        >\n                                        </div>\n                                        <span\n                                            style={{ color: 'rgb(0,0,0)', marginLeft: '42px' }} >Account Info\n                                        </span>\n                                    </div>\n                                </div>\n                            </div>\n                            <br />\n                            <div className=\"info__input\" >\n\n                                <CssTextValidator\n                                    variant=\"standard\"\n                                    className={classes.margin}\n                                    fullWidth\n                                    label=\"Enter your name\"\n                                    onChange={(e) => setName(e.target.value)}\n                                    name=\"email\"\n                                    value={name}\n                                    autoComplete='off'\n                                    InputProps={{\n                                        className: classes.label,\n                                    }}\n                                />\n                                <br/>\n\n                                <CopyToClipboard text={me} >\n                                    <button type=\"button\" className=\"button\" >\n                                        <span className=\"button__text\">COPY YOUR ID</span>\n                                        <span className=\"button__icon\">\n                                            <Assignment fontSize=\"large\" />\n                                        </span>\n                                    </button>\n                                </CopyToClipboard>\n\n\n                            </div>\n\n                        </div>\n\n                        <p className=\"copyright\" style={{ opacity: `${sidebar ? '1' : '0'}`, transition: '200ms' }} >Made with <span >&#128153;</span> in Cyrrus Labs</p>\n\n                        <div className=\"sidebar__item\" >\n                            <div className=\"icon__wrapper\">\n                                <div\n\n                                    onClick={ callAccepted && !callEnded ? leaveCall : handleSidebar }\n\n                                    className=\"icon\">\n                                    <div className=\"icon__content\"\n                                         style={{ backgroundColor: '#e9d2ce' }} >\n                                        <div\n                                            className=\"call__button\"\n                                            style={{ right: '0px' }}\n                                        >\n                                        </div>\n                                        <span\n                                            style={{ color: 'rgb(0,0,0)', marginLeft: '12px' }} >\n                                            { callAccepted && !callEnded ? <p>Hang Up call</p> : <p>Make a call</p> }\n                                        </span>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <br />\n                            <div className=\"call__input\" >\n\n                                <CssTextValidator\n                                    variant=\"standard\"\n                                    className={classes.margin}\n                                    fullWidth\n                                    label=\"ID to call\"\n                                    onChange={(e) => setIdToCall(e.target.value)}\n                                    name=\"email\"\n                                    value={idToCall}\n                                    autoComplete='off'\n                                    InputProps={{\n                                        className: classes.label,\n                                    }}\n                                />\n\n                                <br/>\n\n                                { callAccepted && !callEnded ? (\n                                    <button type=\"button\" className=\"button\" onClick={leaveCall} >\n                                    <span className=\"button__icon\">\n                                        <PhoneDisabled fontSize=\"large\" />\n                                    </span>\n                                        <span className=\"button__text\">HANG UP</span>\n                                    </button>\n                                ) : (\n                                    <button type=\"button\"\n                                            onClick={() => callUser(idToCall)}\n                                            className=\"button\">\n                                        <span\n                                            onClick={ handleSidebar }\n                                            className=\"button__icon\">\n                                            <Phone fontSize=\"large\" />\n                                        </span>\n                                        <span className=\"button__text\">CALL</span>\n                                    </button>\n                                )}\n\n\n                            </div>\n\n                        </div>\n\n                    </div>\n                </div>\n\n            </div>\n        </div>\n    );\n};\n\nconst CssTextValidator = withStyles({\n    root: {\n        '& label': {\n            color: '#e9d2ce',\n            fontFamily: 'Montserrat',\n            fontSize: '17px',\n            fontWeight: 'bold',\n        },\n\n        '& label.Mui-focused': {\n            color: '#e9d2ce',\n        },\n        '& .MuiInput-underline::before': {\n            borderColor: '#e9d2ce',\n            borderWidth: 2,\n        },\n        '& .MuiInput-underline::after': {\n            // borderColor: '#c1291f',\n            borderColor: '#e9d2ce',\n            borderWidth: 2,\n        }\n    },\n})(TextField);\n\nconst useStyles = makeStyles((theme) => ({\n\n    // '& .MuiButton-fullWidth ' : {\n    //     width: '100px'\n    // },\n\n    margin: {\n        margin: theme.spacing(0),\n    },\n    label : {\n        fontFamily: 'Montserrat',\n        fontSize: '17px',\n        fontWeight: 'bold',\n        color: '#e9d2ce',\n\n    },\n    submit: {\n        background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\n        margin: theme.spacing(1),\n        color: '#e9d2ce',\n        fontFamily: 'Marcellus',\n        fontSize: '15px',\n        fontWeight: '300',\n        // width: '170px'\n\n    }\n\n\n}));\n\nexport default Sidebar;\n","import React, { useContext } from 'react';\nimport \"./video.css\";\nimport { SocketContext } from '../Context';\n\n\nconst Video = () => {\n    const { name, callAccepted, myVideo, userVideo, callEnded, stream, call } = useContext(SocketContext);\n\n    return (\n        <div className=\"video__wrapper\" >\n\n            {stream && (\n                <>\n                    <div className=\"video__stream\" >\n                        {/*<h4>{name || 'Name'}</h4>*/}\n                        <video playsInline muted ref={myVideo} autoPlay className=\"video__container\" />\n\n                        <div className=\"overlay__wrapper\">\n                            <h4>{name || 'Name'}</h4>\n\n                            {/*<div className=\"overlay\">*/}\n                            {/*    <h4>{name || 'Name'}</h4>*/}\n                            {/*</div>*/}\n                        </div>\n\n                    </div>\n\n                </>\n\n            )}\n\n            {callAccepted && !callEnded && (\n                <div className=\"video__stream\" >\n                    <video playsInline ref={userVideo} autoPlay className=\"video__container\" />\n                    <div className=\"overlay__wrapper\">\n                        <h4>{call.name || 'Name'}</h4>\n\n                    </div>\n                </div>\n            )}\n\n        </div>\n    );\n};\n\nexport default Video;\n","import React, {useState, useEffect, useContext} from 'react';\nimport \"./Sidebar_Small.css\";\nimport {Assignment, Phone, PhoneDisabled} from \"@material-ui/icons\";\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport {CopyToClipboard} from \"react-copy-to-clipboard\";\nimport {makeStyles, TextField, withStyles} from \"@material-ui/core\";\nimport {SocketContext} from \"../Context\";\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport { useSpring, animated } from 'react-spring/web.cjs';\n\n\nconst Fade = React.forwardRef(function Fade(props, ref) {\n    const { in: open, children, onEnter, onExited, ...other } = props;\n    const style = useSpring({\n        from: { opacity: 0 },\n        to: { opacity: open ? 1 : 0 },\n        onStart: () => {\n            if (open && onEnter) {\n                onEnter();\n            }\n        },\n        onRest: () => {\n            if (!open && onExited) {\n                onExited();\n            }\n        },\n    });\n\n    return (\n        <animated.div ref={ref} style={style} {...other}>\n            {children}\n        </animated.div>\n    );\n});\n\n\nconst Sidebar_Small = () => {\n    const { me, callAccepted, name, setName, callEnded, leaveCall, callUser } = useContext(SocketContext);\n    const classes = useStyles();\n\n    const [idToCall, setIdToCall] = useState('');\n    const [open, setOpen] = React.useState(false);\n    const [infos, setInfos] = React.useState(false);\n    const [call, setCall] = React.useState(false);\n\n\n    const handleOpenInfos = () => {\n        setOpen(true);\n        setInfos(true)\n    };\n\n    const handleOpenCall = () => {\n        setOpen(true);\n        setCall(true)\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n        setCall(false);\n        setInfos(false);\n    };\n\n\n    return (\n        <div>\n            <div className=\"sidebar__small__wrapper\" >\n                <div className=\"sidebar__small\" >\n                    {/*<p>Hey Guys, Jesus is Lord</p>*/}\n\n                    <span onClick={handleOpenInfos} className=\"button__small__icon\">\n                        <AccountCircleIcon\n                            style={{ color: 'rgba(233,210,206,1)' }}\n                            fontSize=\"large\" />\n                        <p>Infos</p>\n                    </span>\n\n\n                    <span onClick={ callAccepted && !callEnded ? leaveCall : handleOpenCall } className=\"button__small__icon\">\n                       <Phone\n                           style={{ color: 'rgba(233,210,206,1)' }}\n                           fontSize=\"large\" />\n                        { callAccepted && !callEnded ? <p>HangUp</p> : <p>Call</p> }\n                    </span>\n                </div>\n\n                <Modal\n                    aria-labelledby=\"spring-modal-title\"\n                    aria-describedby=\"spring-modal-description\"\n                    className={classes.modal}\n                    open={open}\n                    onClose={handleClose}\n                    closeAfterTransition\n                    BackdropComponent={Backdrop}\n                    BackdropProps={{\n                        timeout: 500,\n                    }}\n                >\n\n                    <div className=\"removeOutline\" >\n                        <Fade in={open}>\n\n                            {\n                                infos && !call &&\n                                    (\n                                        <div className={classes.paper}>\n                                            {/*<h2 id=\"spring-modal-title\">Spring modal</h2>*/}\n                                            {/*<p id=\"spring-modal-description\">react-spring animates me.</p>*/}\n\n                                            <CssTextValidator\n                                                variant=\"standard\"\n                                                className={classes.margin}\n                                                fullWidth\n                                                label=\"Enter your name\"\n                                                onChange={(e) => setName(e.target.value)}\n                                                name=\"email\"\n                                                value={name}\n                                                autoComplete='off'\n                                                InputProps={{\n                                                    className: classes.label,\n                                                }}\n                                            />\n                                            <br/>\n\n                                            <CopyToClipboard text={me} >\n                                                <button type=\"button\" className=\"btn\" onClick={handleClose}  >\n                                                    <span className=\"btn__small__text\">COPY YOUR ID</span>\n                                                    <span className=\"btn__icon\">\n                                                        <Assignment fontSize=\"large\" />\n                                                    </span>\n                                                </button>\n                                            </CopyToClipboard>\n\n                                        </div>\n                                    )\n                            }\n\n                            {\n                                call & !infos &&\n                                    (\n                                        <div className={classes.paper} >\n                                            <CssTextValidator\n                                                variant=\"standard\"\n                                                className={classes.margin}\n                                                fullWidth\n                                                label=\"ID to call\"\n                                                onChange={(e) => setIdToCall(e.target.value)}\n                                                name=\"email\"\n                                                value={idToCall}\n                                                autoComplete='off'\n                                                InputProps={{\n                                                    className: classes.label,\n                                                }}\n                                            />\n\n                                            <br/>\n\n                                            { callAccepted && !callEnded ? (\n                                                <button type=\"button\" className=\"btn\" onClick={leaveCall} >\n                                                    <span className=\"button__icon\">\n                                                    <PhoneDisabled fontSize=\"large\" />\n                                                    </span>\n                                                    <span className=\"button__text\">HANG UP</span>\n                                                </button>\n                                            ) : (\n                                                <button type=\"button\"\n                                                        onClick={() => callUser(idToCall)}\n                                                        className=\"btn\">\n                                                            <span\n                                                                onClick={ handleClose }\n                                                                className=\"button__icon\">\n                                                            <Phone fontSize=\"large\" />\n                                                            </span>\n                                                    <span className=\"button__text\">CALL</span>\n                                                </button>\n                                            )}\n                                        </div>\n                                    )\n                            }\n\n\n                        </Fade>\n                    </div>\n\n\n                </Modal>\n\n\n            </div>\n        </div>\n    );\n};\n\nconst CssTextValidator = withStyles({\n    root: {\n        '& label': {\n            color: '#0E0B0F',\n            fontFamily: 'Montserrat',\n            fontSize: '17px',\n            fontWeight: 'bold',\n        },\n\n        '& label.Mui-focused': {\n            color: '#0E0B0F',\n        },\n        '& .MuiInput-underline::before': {\n            borderColor: '#0E0B0F',\n            borderWidth: 2,\n        },\n        '& .MuiInput-underline::after': {\n            // borderColor: '#c1291f',\n            borderColor: '#0E0B0F',\n            borderWidth: 2,\n        }\n    },\n})(TextField);\n\nconst useStyles = makeStyles((theme) => ({\n\n    paper: {\n        backgroundColor: theme.palette.background.paper,\n        border: 'none',\n        borderRadius: '10px',\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing(4, 4, 3),\n    },\n\n    modal: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n\n        \"&:focus\":{\n            outline: \"none\"\n        }\n    },\n    margin: {\n        margin: theme.spacing(0),\n    },\n    label : {\n        fontFamily: 'Montserrat',\n        fontSize: '17px',\n        fontWeight: 'bold',\n        color: '#0E0B0F',\n\n    },\n    submit: {\n        background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\n        margin: theme.spacing(1),\n        color: '#fff',\n        fontFamily: 'Marcellus',\n        fontSize: '15px',\n        fontWeight: '300',\n        // width: '170px'\n\n    }\n\n\n}));\n\nexport default Sidebar_Small;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Nav from \"./components/Nav\";\nimport Sidebar from \"./components/Sidebar\";\nimport Video from \"./components/video\";\nimport Sidebar_Small from \"./components/Sidebar_Small\";\n\nconst useStyles = makeStyles((theme) => ({\n\n    wrapper: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        width: '100vw',\n    },\n}));\n\nconst App = () => {\n    const classes = useStyles();\n\n    let sidebar = (\n        <Sidebar />\n    )\n\n    if ( isMobile() ) {\n        sidebar = (\n            <Sidebar_Small />\n        )\n    }\n\n    return (\n        <div className={classes.wrapper}>\n\n            <Nav />\n\n            { sidebar }\n\n            <Video />\n\n        </div>\n    );\n};\n\nfunction isMobile() {\n    const toMatch = [\n        /Android/i,\n        /webOS/i,\n        /iPhone/i,\n        /iPod/i,\n        /BlackBerry/i,\n        /Windows Phone/i\n    ];\n\n    return toMatch.some((toMatchItem) => {\n        return navigator.userAgent.match(toMatchItem);\n    });\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport { ContextProvider } from './Context';\n\nimport './styles.css';\n\nReactDOM.render(\n    <ContextProvider>\n        <App />\n    </ContextProvider>,\n    document.getElementById('root'),\n);"],"sourceRoot":""}